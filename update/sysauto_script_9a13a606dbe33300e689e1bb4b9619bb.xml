<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Generate Random Incident Records (V2)</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2019-08-28 03:12:20</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[//Number of NeedIt records to create
	var recordsToMake = 1200;
	
	// Declare and initialize variables used in the script
	var genIRec;
	var i;
	var dateNow = new GlideDateTime();
	var dateCanBeClosed = new GlideDateTime();
	var tableName = "incident";
	var categoryArray = ["Software","Hardware","Network","Database"];
	var subcategoryArray = [];
	var requestedForArray = [];
	var selectCategory = "";
	var selectSubCategory = "";
	var categoryLabel = "";
	var pickUser = "";
	var pickDate = 1;
	var pickResolved = 1;
	var pickClosed = 1;
	var pickPriority = 1;
	
	//set dateCanBeClosed before loop
	dateCanBeClosed.addDaysUTC(-5);
	
	//For loop to create records
		for (i = 0; i < recordsToMake; i++) {
						
			//Declare variables that need to be reset each time the lopp occurs
			var grSubCategories = new GlideRecord("sys_choice");
			var dateCreated = new GlideDateTime();
			var dateResolved = new GlideDateTime();
			var dateClosed = new GlideDateTime();
			var grUsers = new GlideRecord("sys_user");
			var pickState = 5;
			
			//Create an empty record for the NeedIt table
			genIRec = new GlideRecord(tableName);
			genIRec.newRecord();
			
			//Select a random value from the Category array and set the Category field value (choice)
			selectCategory = categoryArray[(Math.floor(Math.random() * 4))];
			genIRec.setValue("category",selectCategory);
			
			//Set subcategoryArray to valid values based on Category field.
			grSubCategories.addQuery('inactive', false);
			grSubCategories.addQuery('name', "Incident");
			grSubCategories.addQuery('dependent_value', selectCategory);		
			grSubCategories.query();
			while (grSubCategories.next()){
				subcategoryArray.push(grSubCategories.label.toString());
			}
			
			//Set the Sub Category field value (choice) from the subcategoryArray
			selectSubCategory = subcategoryArray[(Math.floor(Math.random()*grSubCategories.getRowCount()))];		
			genIRec.setValue("subcategory",selectSubCategory);
			
			//Set the Short description field value (string)
			genIRec.setValue("short_description", "Automatically created Incident Record: " + selectCategory + ", " + selectSubCategory);
			
			//Set the date created value (date/time) to a date between yesterday and twelve months ago
			pickDate = (Math.floor(Math.random() * 365) + 1);
			dateCreated.addDaysUTC(-pickDate);		
			genIRec.setValue("sys_created_on",dateCreated.getDate());
			
			//Set requestedForArray to only valid values
			grUsers.addQuery('active', true);
			grUsers.query();
			while (grUsers.next()){
				requestedForArray.push(grUsers.name.toString());
			}
			
			//Set the Requested for field value (reference) by selecting a random user from requestedForArray.
			//The reference field cannot be set in a scoped app using the setValue method unless using the sys_id to set the field value.  
			//To set by display name, use the GlideElement setDisplayValue method.  gr.<field_name>.setDisplayValue(<value>)
			pickUser = requestedForArray[(Math.floor(Math.random()*grUsers.getRowCount()))];
			genIRec.caller_id.setDisplayValue(pickUser);
			
			//Set the Priority field value (choice) to a random value
			pickPriority = (Math.floor(Math.random()*5)+1);
			genIRec.setValue("priority",pickPriority);
			
			//Set a random state (can only be Closed(7) if less then 5 days old). Randomise if value is 4 or 5 (no assigned state at this stage)
			while (pickState == 4 || pickState == 5){
				if (dateCreated.getDate() < dateNow.getDate()){
					pickState = (Math.floor(Math.random() * 7)+1);
				}
				else{
					pickState = (Math.floor(Math.random() * 6)+1);
				}
			}
			genIRec.setValue("state",pickState);
			
			//If the stated is Resolved(6) or Closed(7) set resolved between the date created and now
			//Set the closed date to 5 days later
			if (pickState == 6){
				pickResolved = (Math.floor(Math.random() * pickDate) + 1);
				dateResolved.addDaysUTC(-pickResolved);		
				genIRec.setValue("resolved_at",dateResolved.getDate());
			}
			else if (pickState == 7){
				pickResolved = (Math.floor(Math.random() * (pickDate - 5)) + 1);
				dateResolved.addDaysUTC(-pickResolved);	
				genIRec.setValue("resolved_at",dateResolved.getDate());	
				dateClosed.addDaysUTC(5 - pickResolved);
			}
			
			//Insert the new NeedIt record into the table
			genIRec.insert();
			
			gs.info("Debug - " + genIRec.number + ',' + selectCategory + ',' + selectSubCategory + ',' + dateCreated.getDate() + ',' + pickUser + ',' + pickPriority + "," + pickState + "," + dateResolved.getDate() + "," + dateClosed.getDate());
			
		}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-08-30 07:27:30</sys_created_on>
        <sys_id>9a13a606dbe33300e689e1bb4b9619bb</sys_id>
        <sys_mod_count>103</sys_mod_count>
        <sys_name>Generate Random Incident Records (V2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sysauto_script_9a13a606dbe33300e689e1bb4b9619bb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-03 03:18:00</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
